machine:
    type: controlplane
    certSANs:
      - ${endpoint}
      - ${ip_address}
    kubelet:
        image: ${registry}/siderolabs/kubelet:${kubernetes_version}
        defaultRuntimeSeccompProfileEnabled: true
        disableManifestsDirectory: true
        extraConfig:
            serverTLSBootstrap: true
    network: {}
    install:
        disk: ${install_disk}
        image: ${registry}/siderolabs/installer:${installer_version}
        bootloader: true
        wipe: true
        extraKernelArgs:
            - talos.platform=vmware
    features:
        rbac: true
        stableHostname: true
        apidCheckExtKeyUsage: true
    registries:
        mirrors:
            docker.io:
              endpoints:
              - https://${registry}/
            gcr.io:
              endpoints:
              - https://${registry}/
            ghcr.io:
              endpoints:
              - https://${registry}/
            k8s.gcr.io:
              endpoints:
              - https://${registry}/
            quay.io:
              endpoints:
              - https://${registry}/
            registry.k8s.io:
              endpoints:
              - https://${registry}/
        config:
            ${registry}:
                # The TLS configuration for the registry.
                tls:
                    insecureSkipVerify: true
    sysctls:
        net.ipv6.conf.lo.disable_ipv6: "1"
    files:
      - content: 
        permissions: 0644
        path: /etc/ssl/certs/ca-certificates
        op: append
cluster:
    network:
        podSubnets:
            - 10.20.0.0/16
        serviceSubnets:
            - 10.40.0.0/16
    apiServer:
        image: ${registry}/kube-apiserver:${kubernetes_version}
        certSANs:
            - ${endpoint}
            - ${ip_address}
        disablePodSecurityPolicy: true
        admissionControl:
            - name: PodSecurity
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    controllerManager:
        image: ${registry}/kube-controller-manager:${kubernetes_version}
    coreDNS:
        image: ${registry}/coredns/coredns:${coredns_version}
    proxy:
        image: ${registry}/kube-proxy:${kubernetes_version}
    scheduler:
        image: ${registry}/kube-scheduler:${kubernetes_version}
    discovery:
        enabled: true
        registries:
            kubernetes:
                disabled: false
            service:
                endpoint: https://${registry}:3000/
    inlineManifests:
        - name: namespace-ci
          contents: |-
            apiVersion: apps/v1
            kind: DaemonSet
            metadata:
              labels:
                app: talos-vmtoolsd
              name: talos-vmtoolsd
              namespace: kube-system
            spec:
              selector:
                matchLabels:
                  app: talos-vmtoolsd
              template:
                metadata:
                  labels:
                    app: talos-vmtoolsd
                spec:
                  automountServiceAccountToken: false
                  enableServiceLinks: false
                  priorityClassName: system-node-critical
                  restartPolicy: Always
                  tolerations:
                    - key: node.cloudprovider.kubernetes.io/uninitialized
                      operator: Exists
                      effect: NoSchedule
                    - key: node-role.kubernetes.io/master
                      operator: Exists
                      effect: NoSchedule
                    - key: node-role.kubernetes.io/control-plane
                      operator: Exists
                      effect: NoSchedule
                  containers:
                    - image: ${registry}/mologie/talos-vmtoolsd-unstable:latest
                      imagePullPolicy: Always
                      name: talos-vmtoolsd
                      volumeMounts:
                        - name: config
                          mountPath: /etc/talos-vmtoolsd
                          readOnly: true
                      env:
                        - name: TALOS_CONFIG_PATH
                          value: /etc/talos-vmtoolsd/talosconfig
                        - name: TALOS_HOST
                          valueFrom:
                            fieldRef:
                              fieldPath: status.hostIP
                      resources:
                        requests:
                          memory: 8Mi
                        limits:
                          memory: 64Mi
                          cpu: 500m
                      securityContext:
                        readOnlyRootFilesystem: true
                        allowPrivilegeEscalation: false
                        runAsUser: 1002
                        runAsGroup: 1002
                  securityContext:
                    fsGroup: 1002
                  volumes:
                    - name: config
                      secret:
                        secretName: talos-vmtoolsd-config
                        defaultMode: 0400
